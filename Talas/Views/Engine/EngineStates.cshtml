@using System.Globalization
@model IEnumerable<Objects.EngineState>

@{  
    const string valueON = "ON";
    const string valueOFF = "OFF";
    const string valueHigh = "High";

    const string formatClampValue = "0.0000000";
}

<div class="pre-scrollable engineStates">
    <table class="table text-left">
        <thead>
            <tr>
                <th>Date & Time</th>
                <th>@ViewBag.ModeName</th>
                @if (ViewBag.IsClamp != null && ViewBag.IsClamp)
                {
                    <th>Instant Leakage Current, A</th>
                }
                @if ((Byte)ViewBag.Mode == 4)
                {
                    <th>R30</th>
                    <th>R60</th>
                    <th>RAvg</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var es in Model)
            {
                <tr>
                    <td><span>@es.DateString</span></td>
                    <td>
                        <span>
                            @switch ((Byte)ViewBag.Mode)
                            {
                                case 2:
                                    @((es.Work == null)? valueOFF: (bool)es.Work ? valueON : valueOFF)
                                    break;
                                case 3:
                                    if (ViewBag.IsClamp)
                                     {
                                        @(((double)es.Value/1000000).ToString(formatClampValue))
                                     }
                                     else
                                     {
                                         @(es.Value > 8000 ? valueHigh : es.Value.ToString())
                                     }
                                    break;
                                    case 4:
                                    @((es.R60!=null && es.R30!=null) ? (float)es.R60 / (float)es.R30 : 0)
                                    break;
                                    case 5:
                                    @((bool)es.Status ? valueON : valueOFF)
                                    break;
                                    case 6:
                                    @( es.Status_M == null ? valueOFF:(bool)es.Status_M ? valueON : valueOFF)
                                    break;
                            }
                        </span>
                    </td>
                    @if (ViewBag.IsClamp != null && ViewBag.IsClamp)
                    {
                        <td>
                            <span>@es.LeakageCurrent.ToString(formatClampValue)</span>
                        </td>
                    }
                    @if ((Byte)ViewBag.Mode==4)
                    {
                        <td>
                            <span>@es.R30</span>
                        </td>
                        <td>
                            <span>@es.R60</span>
                        </td>
                        <td>
                            <span>@es.Ravg</span>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

@if (ViewBag.WorkTimes != null)
{
    <input type="hidden" name="work" value=@ViewBag.WorkTimes>
    <input type="hidden" name="notWork" value=@ViewBag.NotWorkTimes>
}